//=============================================
//
// ゲージ関係のクラス処理 [ gage.cpp ]
// Author: Asuma Nishio
//
//=============================================

//**********************
// インクルードファイル
//**********************
#include "gauge.h"
#include "template.h"

//===============================
// オーバーロードコンストラクタ
//===============================
CGauge::CGauge(int nPriority) : CObject2D(nPriority)
{
	// 無し
}
//===============================
// デストラクタ
//===============================
CGauge::~CGauge()
{
	// 無し
}
//===============================
// 生成処理
//===============================
CGauge* CGauge::Create(D3DXVECTOR3 pos, float fWidth, float fHeight)
{
	// インスタンス生成
	CGauge* pGage = new CGauge;
	if (pGage == nullptr) return nullptr;

	// 初期化失敗時
	if (FAILED(pGage->Init()))
	{
		// nullポインタを返す
		return nullptr;
	}

	// オブジェクト設定
	pGage->SetPos(pos);
	pGage->SetSize(fWidth, fHeight);

	// ポインタを返す
	return pGage;
}
//===============================
// 初期化処理
//===============================
HRESULT CGauge::Init(void)
{
	// 親クラスの初期化
	CObject2D::Init();

	// 初期化結果を返す
	return S_OK;
}
//===============================
// 終了処理
//===============================
void CGauge::Uninit(void)
{
	// 親クラスの終了処理
	CObject2D::Uninit();
}
//===============================
// 更新処理
//===============================
void CGauge::Update(void)
{
	// 親クラスの更新
	CObject2D::Update();
}
//===============================
// 描画処理
//===============================
void CGauge::Draw(void)
{
	// 親クラスの描画
	CObject2D::Draw();
}
//==========================================
// int型パラメーターのゲージ設定処理関数
//==========================================
void CGauge::SetLengthParamInt(const int nMax, const int nCurrent, const float fMaxWidth)
{
	// 最大HPが0以下の時
	if (nMax <= 0) return;

	// 与えられた引数の値の割合を計算
	float fRate = static_cast<float>(nCurrent) / static_cast<float>(nMax);
	fRate = Clump(fRate, 0.0f, 1.0f); 	// クランプする

	// ゲージの長さにセットする
	SetSize(fMaxWidth * fRate, GetHeight());
}
//==========================================
// float型パラメーターのゲージ設定処理関数
//==========================================
void CGauge::SetLengthParamFloat(const float fMax, const float fCurrent, const float fMaxWidth)
{
	// 0.0f以下なら
	if (fMax <= 0.0f) return;

	// 与えられた引数の値の割合を計算
	float fRate = fCurrent / fMax;
	fRate = Clump(fRate, 0.0f, 1.0f); 	// クランプする

	// ゲージの長さにセットする
	SetSize(fMaxWidth * fRate, GetHeight());
}