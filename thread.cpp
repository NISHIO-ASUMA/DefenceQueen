//=====================================
//
// スレッドクラス処理 [ thread.cpp ]
// Author: Asuma Nishio
//
// TOOD : 実態を知ってから作ろう
// まずはマルチスレッドの研究から
//=====================================

//**********************
// インクルードファイル
//**********************
#include "thread.h"

//**********************
// 使用名前空間
//**********************
using namespace std;

//============================
// コンストラクタ
//============================
CThread::CThread()
{
	//値のクリア
	m_isRunning = false;
}
//============================
// デストラクタ
//============================
CThread::~CThread()
{

}
//============================
// スレッド開始
//============================
void CThread::Start(std::function<void()> func)
{
	// 有効状態なら
	if (m_isRunning) return;

	// フラグを有効化
	m_isRunning = true;

	// 部分スレッドを開始する
	m_thread = std::thread(&CThread::ThreadProc, this, func);
}
//============================
// スレッド停止
//============================
void CThread::Stop(void)
{
	// もしスレッドがまだ終わってないなら
	if (m_thread.joinable())
	{
		// スレッド終了まで待つ
		m_thread.join();
	}

	// フラグを未使用にする
	m_isRunning = false;
}
//============================
// 部分スレッド処理
//============================
void CThread::ThreadProc(std::function<void()> func)
{
	// 引数の処理を起動
	func();
}